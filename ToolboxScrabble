def VisualiseBoard( image, FillSize, SizeOfReworkedImage ):
  "Takes the image to find the outer edges"
  
  #blur with a square of 9 (recommanded) and a sigma value of 75 (not strong, not too smooth)
  blur = cv2.bilateralFilter(image,9,75,75)
  
  #Threshold binary with 110 as Threshold value
  ret,th1 = cv2.threshold(blur,110,255,cv2.THRESH_BINARY)
  
  #Create a kernel of size Fillsize to open the thresholded image 
  kernel = np.ones((FillSize,FillSize),np.uint8)
  opening = cv2.morphologyEx(th1, cv2.MORPH_OPEN, kernel)
  
  #Find all the contours in the opened image and retain only useful points
  contours, hierarchy = cv2.findContours(opening,cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
  
  #apply Canny Edge algorythm
  edges = cv2.Canny(img,100,200)
  
  #Take only the second contour
  contour = contours[1]
  
  #calculate the corners with the contour
  epsilon = 0.1*cv2.arcLength(contour,True)
  approx = cv2.approxPolyDP(contour,epsilon,True)

  cv2.drawContours(opening, approx, -1, (255,255,255), 4)

  cv2.imshow('Opening',opening)
  cv2.waitKey(TimeToWait)
  cv2.destroyAllWindows()
  
  return [expression]
